openapi: 3.0.3
info:
  title: Interoperability APIs - Integrated Beneficiary Registry
  x-logo:
    url: 'https://spdci.github.io/api-documentation/draft/dci-logo.png'
    backgroundColor: '#FFFFFF'
    altText: 'Digital Convergence Initiative'  
  description: |-
    The IBR(Integrated Beneficiary Registry) interoperability APIs describes different APIs some of them are usecase specific and other are generalized APIs to perform interoperable operations between IBR registry and SP system.
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in upcoming version.

    1. Search: The Search API provides functionality to search based on demographic, identifiers and custom query
    2. Event subscription: The Event subscription APIs describe APIs useful to subscribe / unsubscribe events. When any event happens in crvs registry it sends event details on notify end point
    3. Request status check: The request status checking APIs implement to check status of request sent in any above APIs
    
    Gitbook reference link[WIP]:
    - [Integrated Beneficiary Registry - V1.0 ](https://digital-convergence-initiative-d.gitbook.io)

    Code directory links[WIP]:
    - [Identifiers](https://digital-convergence-initiative-d.gitbook.io/)
    
    Each request is build up of three parts
    - signature 
    - header 
    - message
  version: 1.0.0
  contact:
    name: DCI Social Protection
    email: info@spdci.org
  license:
   name: DCI Social Protection License
   url: https://github.com/spdci/standards/blob/draft/LICENSE.md
 
servers:
  - url: "https://sandbox.spdci.org/namespace/v1.0.0"
    description: Sandbox Server
tags: 
  - name: Async
    description: Async endpoints
  - name: Sync 
    description: Sync endpoints
  - name: Schemas
    description: Schemas
  - name: Status Codes
    description: Status Codes
  - name: SearchRequest
    x-displayName: SearchRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SearchRequest" />    
  - name: SearchResponse
    x-displayName: SearchResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SearchResponse" />  
  - name: SearchStatusReasonCode
    x-displayName: SearchStatusReasonCode
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/SearchStatusReasonCode" />        
  - name: UnSubscribeRequest
    x-displayName: UnSubscribeRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UnSubscribeRequest" />    
  - name: UnSubscribeResponse
    x-displayName: UnSubscribeResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UnSubscribeResponse" />  
  - name: UnSubscribeStatusReasonCode
    x-displayName: UnSubscribeStatusReasonCode
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/UnSubscribeStatusReasonCode" />        
  - name: ReceiptRequest
    x-displayName: ReceiptRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/ReceiptRequest" />    
  - name: ReceiptResponse
    x-displayName: ReceiptResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/ReceiptResponse" />    

  - name: TxnStatusRequest
    x-displayName: TxnStatusRequest
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/TxnStatusRequest" />    
  - name: TxnStatusResponse
    x-displayName: TxnStatusResponse
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/TxnStatusResponse" />    
  - name: EncryptedMessage
    x-displayName: EncryptedMessage
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/EncryptedMessage" />    
x-tagGroups:
  - name: API Definitions
    tags:
      - Async
      - Sync
  - name: Schema Objects
    tags:
      - SearchRequest
      - SearchResponse 
      - ReceiptRequest
      - ReceiptResponse
      - TxnStatusRequest
      - TxnStatusResponse
      - EncryptedMessage
  - name: Status Codes
    tags: 
      - SearchStatusReasonCode
paths:
 /registry/search:
  post: 
    summary: "/registry/search"
    description: Search person(s) in registry using identifier or custome attributes
    operationId: post_reg_search
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  oneOf:
                    - $ref: "#/components/schemas/SearchRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
 /registry/on-search:
  post: 
    summary: "/registry/on-search"
    description: Search results through callback
    operationId: post_reg_on-search
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - on-search
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/SearchResponse'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - on-search
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
   
 /registry/subscribe:
  post: 
    summary: "/registry/subscribe"
    description: Subscribe to a life event with registry
    operationId: post_reg_subscribe
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - subscribe
                message:
                  type: object
                  description: Subscription request which contaion query with frequency and other info on which notification to be sent by registry to subscriber, The IBR supports benefit_disbusrement,programme_exited events as of now
                  oneOf:
                    - $ref: "#/components/schemas/SubscribeRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - subscribe
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
 /registry/on-subscribe:
  post: 
    summary: "/registry/on-subscribe"
    description: Subscribe results through callback
    operationId: post_reg_on-subscribe
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - on-subscribe
                message:
                  type: object
                  description: Subscription information 
                  oneOf:
                    - $ref: "#/components/schemas/SubscribeResponse"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - on-subscribe
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false

 /registry/unsubscribe:
  post: 
    summary: "/registry/unsubscribe"
    description: Unsubscribe existing subscription(s) by subscription_code
    operationId: post_reg_unsubscribe
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - unsubscribe
                message:
                  type: object
                  description: The unsubscribe request that contain subscription ids which to be removed from subscription list 
                  oneOf:
                    - $ref: "#/components/schemas/UnSubscribeRequest"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - unsubscribe
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
 /registry/on-unsubscribe:
  post: 
    summary: "/registry/on-unsubscribe"
    description: Unsubscribe response as a callback
    operationId: post_reg_on-unsubscribe
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - on-unsubscribe
                message:
                  type: object
                  oneOf:
                    - $ref: "#/components/schemas/UnSubscribeResponse"
                    - $ref: "#/components/schemas/EncryptedMessage"
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - on-unsubscribe
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false

 /registry/on-notify:
  post: 
    summary: "/registry/on-notify"
    description: Registry to notify a life event to subscrbiers
    operationId: post_reg_on_notify
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - notify
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/ReceiptResponse'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - notify
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false

 /registry/txn/status:
  post: 
    summary: "/registry/txn/status"
    description: Perform async status check of previous civil registry transanctions using transaction_id and/or reference_id(s)
    operationId: post_reg_txnstatus
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - txn-status
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - txn-status
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
 /registry/txn/on-status:
  post: 
    summary: "/registry/txn/on-status"
    description: Response to async status check of previous civil registrt transanctions using callback
    operationId: post_reg_on-txnstatus
    tags: 
      -  Async
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - txn-on-status
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusResponse'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - txn-on-status
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false

 /registry/sync/search:
  post: 
    summary: "/registry/sync/search"
    description: Search person(s) in registry using identifier or custome attributes
    operationId: post_reg_sync_search
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - search
                message:
                  type: object
                  description: The search data using which registry search to be performed
                  oneOf:
                    - $ref: '#/components/schemas/SearchRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
    responses:
        default:
          description: "Registry search response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  signature:  
                    $ref: "#/components/schemas/MsgSignature"
                  header:
                    allOf:
                      - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                      - properties:
                          action:
                            enum:
                              - on-search
                  message:
                    type: object
                    oneOf:
                      - $ref: '#/components/schemas/SearchResponse'
                      - $ref: '#/components/schemas/EncryptedMessage'
                required:
                  - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
 /registry/receipts:
  post: 
    summary: "/registry/receipts"
    description: Registry receive receipts from SP system
    operationId: post_reg_receipts
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - notify
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/ReceiptRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - notify
    responses:
        default:
          $ref: "#/components/responses/Response"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
 
 /registry/sync/notify:
  post: 
    summary: "/registry/sync/notify"
    description: Registry to notify a life event to subscrbiers
    operationId: post_reg_sync_notify
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - notify
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/NotifyEventRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
        multipart/form-data:
          schema:
            allOf:
              - $ref: "#/components/schemas/FileInfo"
              - properties:
                  action:
                    enum:
                      - notify
    responses:
        default:
          $ref: "#/components/responses/HttpErrorResponse"
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false
 /registry/sync/txn/status:
  post: 
    summary: "/registry/sync/txn/status"
    description: Sync status check of registry Async APIs
    operationId: post_reg_sync_txnstatus
    tags: 
      -  Sync
    requestBody:
      description: ""
      required: true
      content:
        application/json:
          schema:
              type: object
              properties:
                signature:  
                  $ref: "#/components/schemas/MsgSignature"
                header:
                  allOf:
                    - $ref: "#/components/schemas/MsgHeader_V1.0.0"
                    - properties:
                        action:
                          enum:
                            - txn-status
                message:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/TxnStatusRequest'
                    - $ref: '#/components/schemas/EncryptedMessage'
              required:
                - header
                - message
    responses:
        default:
          description: "Transaction status check response"
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    signature:  
                      $ref: "#/components/schemas/MsgSignature"
                    header:
                      allOf:
                        - $ref: "#/components/schemas/MsgCallbackHeader_V1.0.0"
                        - properties:
                            action:
                              enum:
                                - txn-on-status
                    message:
                      type: object
                      oneOf:
                        - $ref: '#/components/schemas/TxnStatusResponse'
                        - $ref: '#/components/schemas/EncryptedMessage'
                  required:
                    - header
        '401':
          $ref: "#/components/responses/HttpErrorResponse"
        '403':
          $ref: "#/components/responses/HttpErrorResponse"
        '500':
          $ref: "#/components/responses/HttpErrorResponse"
    security:
      - Authorization: [ ]
    deprecated: false

components:
  schemas: 
    ReceiptRequest: 
      $ref: ibr/ReceiptRequest.yaml
    ReceiptResponse: 
      $ref: ibr/ReceiptResponse.yaml
    SearchRequest: 
      $ref: ibr/SearchRequest.yaml
    SearchResponse: 
      $ref: ibr/SearchResponse.yaml
    SearchStatusReasonCode: 
      $ref: schema/SearchStatusReasonCode.yaml
    SubscribeRequest: 
      $ref: schema/SubscribeRequest.yaml
    SubscribeResponse: 
      $ref: schema/SubscribeResponse.yaml
    SubscribeStatusReasonCode: 
      $ref: schema/SubscribeStatusReasonCode.yaml
    TxnStatusRequest: 
      $ref: ibr/TxnStatusRequest.yaml            
    TxnStatusResponse: 
      $ref: ibr/TxnStatusResponse.yaml  
    UnSubscribeRequest: 
      $ref: schema/UnSubscribeRequest.yaml
    UnSubscribeResponse: 
      $ref: schema/UnSubscribeResponse.yaml
    UnSubscribeStatusReasonCode: 
      $ref: schema/UnSubscribeStatusReasonCode.yaml           
    NotifyEventRequest: 
      $ref: schema/NotifyEventRequest.yaml    
    EncryptedMessage: 
      $ref: ../common/schema/EncryptedMessage.yaml
    Error: 
      $ref: ../common/schema/Error.yaml
    FileInfo: 
      $ref: ../common/schema/FileInfo.yaml
    MsgCallbackHeader_V1.0.0: 
      $ref: ../common/schema/MsgCallbackHeader_V1.0.0.yaml
    MsgHeader_V1.0.0: 
      $ref: ../common/schema/MsgHeader_V1.0.0.yaml
    MsgHeaderStatusReasonCode: 
      $ref: ../common/schema/MsgHeaderStatusReasonCode.yaml
    MsgSignature: 
      $ref:  ../common/schema/MsgSignature.yaml

  responses: 
    HttpErrorResponse:
      $ref: ../common/response/HttpErrorResponse.yaml       
    Response:
      $ref: ../common/response/Response.yaml    
  securitySchemes:
    Authorization:
      $ref: ../common/security/Authorization.yaml
